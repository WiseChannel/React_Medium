{"version":3,"sources":["components/Hooks/useLocalStorage.js","components/Hooks/useFetch.js","components/pages/components/tagList.js","components/pages/components/addToFavorites.js","components/pages/components/feed.js","components/pagination/utils.js","components/pagination/pagination.js","components/pages/components/loading.js","components/pages/components/errorMessage.js","components/popularTags/popularTags.js","components/context/currentUser.js","components/pages/components/feedTogler.js","components/pages/globalFeed/globalFeed.js","components/pages/article/article.js","components/pages/components/backendErrorMessages.js","components/pages/authentication.js","components/pages/tagFeed/tagFeed.js","components/pages/components/articleForm.js","components/pages/createArticle/index.js","components/pages/editArticle/editArticle.js","components/pages/settings/index.js","components/pages/components/userArticles.js","components/pages/components/userProfile.js","components/Routes.js","components/topBar/topbar.js","components/context/currentUserCheker.js","index.js"],"names":["key","initialValue","useState","localStorage","getItem","value","setValue","useEffect","setItem","url","isLoading","setIsLoading","response","setResponse","error","setError","options","setOptions","useLocalStorage","token","doFetch","useCallback","skipGetResponseAfterDestroy","requestOptions","headers","authorization","axios","then","res","data","catch","e","TagList","tags","className","map","tag","AddToFavorites","isFavorited","favoritesCount","articleSlug","apiUrl","useFetch","favoritesCountWithResponse","article","isFavoritedWithResponse","favorited","buttonClasses","classnames","btn","onClick","preventDefault","method","Feed","articles","index","to","author","username","src","image","alt","createdAt","slug","title","description","tagList","getPaginator","search","parsedSearch","parse","currentPage","page","Number","offset","PaginationItem","liClasses","classNames","active","Pagination","start","end","total","limit","pagesCount","Math","ceil","pages","Array","keys","el","Loading","ErrorMessage","PopularTags","initialState","isLoggedIn","currentUser","reducer","state","action","type","payload","CurrentUserContext","createContext","CurrentUserProvider","children","useReducer","Provider","FeedTogler","tagName","useContext","currentUserState","exact","GlobalFeed","location","match","stringifiedParams","stringify","articlesCount","Article","props","params","fetchArticleResponse","fetchArticleError","fetchArticleIsLoading","isSuccessfullDelet","setIsSuccessfullDelet","deleteArticleResponse","doDeleteArticle","lassName","body","BackendErrorMessages","backendErrors","errorMessages","Object","name","messages","join","errorMessage","Authentication","isLogin","path","pageTitle","descriptionLink","descriptionText","email","setEmail","password","setPassword","setUsername","isSuccessfullSubmit","setIsSuccessfullSubmit","setToken","dispatch","user","onSubmit","errors","placeholder","onChange","target","disabled","TagFeed","ArticleForm","initialValues","setTitle","setDescription","setBody","setTagList","event","split","rows","CreateArticle","EditArticle","doFetchArticle","updateArticleResponse","updateArticleError","doUpdateArticle","setInitialValues","titel","Settings","setImage","bio","setBio","isSuccessfullLogout","setIsSuccessfullLogout","UserArticles","isFavorites","getApiUrl","UserProfile","profile","component","YourFeed","TopBar","userImage","CurrentUserChecker","App","Routes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eebe8487.chunk.js","sourcesContent":["import  {useState, useEffect} from 'react'\n\nexport default (key, initialValue = '') => {\n    const [value, setValue] = useState(() => {\n        return localStorage.getItem(key) || initialValue\n    })\n\n    useEffect(() => {\n        localStorage.setItem(key, value) \n    }, [value, key])\n\n    return [value, setValue]\n}","import {useEffect, useState, useCallback} from 'react';\nimport axios from \"axios\";\n\nimport useLocalStorage from './useLocalStorage'\n\nexport default url => {\n\n    const baseUrl = 'https://conduit.productionready.io/api'\n    const [isLoading, setIsLoading] = useState(false);\n    const [response, setResponse] = useState(null);\n    const [error, setError] = useState(null);\n    const [options, setOptions] = useState({});\n    const [token] = useLocalStorage('token');\n\n    const doFetch = useCallback((options = {}) => {\n        setOptions(options);\n        setIsLoading(true)\n    }, []);\n\n    useEffect(() => {\n        let skipGetResponseAfterDestroy = false\n\n        const requestOptions = {\n            ...options,\n            ...{\n                headers: {\n                    authorization: token ? `Token ${token}` : ''\n                }\n            }\n        }\n\n        if (!isLoading) return;\n\n        axios(baseUrl + url, requestOptions)\n            .then(res => {\n                if (!skipGetResponseAfterDestroy) {\n                    setResponse(res.data);\n                    setIsLoading(false)\n                }\n         }).catch(e => {\n            if (!skipGetResponseAfterDestroy) {\n                setError(e.response.data);\n                setIsLoading(false)\n            }\n        })\n\n        return () => {\n            skipGetResponseAfterDestroy = true\n        }\n    }, [isLoading, options, url, token]);\n    \n    return [{isLoading, response, error}, doFetch]\n}\n","import React from \"react\";\n\nconst TagList = ({tags}) => {\n    return (\n        <ul className='tag-list'>\n            {tags.map(tag => (\n                <li key={tag} className='tag-defult tag-pill tag-outline'>\n                    {tag}\n                </li>\n            ))}\n        </ul>\n    )\n};\n\nexport default TagList\n","import React from 'react'\nimport classnames from 'classnames'\n\nimport useFetch from '../../Hooks/useFetch';\n\nconst AddToFavorites = ({isFavorited, favoritesCount, articleSlug}) => {\n\n    const apiUrl = `/articles/${articleSlug}/favorite`;\n    const [{response}, doFetch] = useFetch(apiUrl)\n\n    const favoritesCountWithResponse = response \n    ? response.article.favoritesCount \n    : favoritesCount\n\n    const isFavoritedWithResponse = response \n    ? response.article.favorited \n    : isFavorited\n\n    const buttonClasses = classnames({\n        btn: true,\n        'btn-small': true,\n        'btn-primary': isFavoritedWithResponse,\n        'btn-outline-primary': !isFavoritedWithResponse\n    })\n\n    const handleLike = e => {\n        e.preventDefault()        \n\n        doFetch({\n            method: isFavoritedWithResponse ? 'delete' : 'post'\n        })\n    }\n\n    return (\n        <button className={buttonClasses} onClick={handleLike}>\n            <i>❤️</i>\n            <span className=''>&nbsp; {favoritesCountWithResponse}</span>\n        </button>\n    )\n}\n\nexport default AddToFavorites","import React from 'react'\n\nimport { Link } from 'react-router-dom'\nimport TagList from \"./tagList\";\nimport AddToFavorites from './addToFavorites';\n\nconst Feed = ({articles}) => {\n    return (\n        <div>\n             {articles.map((article, index) => (\n            <div className='article-preview' key={index}>\n                <div className='article-meta'>\n                 <Link to={`/profiles/${article.author.username}`}>\n                     <img src={article.author.image} alt=\"\" />\n                  </Link>\n                    <div className='info'>\n                        <Link to={`/profiles/${article.author.username}`} className='author'>\n                            {article.author.username}\n                        </Link>\n                        <span className='date'>{article.createdAt}</span>\n                    </div>\n                    <div className='pull-xs-right'>\n                    <AddToFavorites\n                    isFavorited={article.favorited}\n                    favoritesCount={article.favoritesCount}\n                    articleSlug={article.slug}\n                  />\n                    </div>\n                </div>\n                <Link to={`/articles/${article.slug}`} className='preview-link'>\n                    <h1>{article.title}</h1>\n                    <p>{article.description}</p>\n                    <span>Read more...</span>\n                    <TagList tags={article.tagList} />\n                </Link>\n            </div>\n         ))}\n        </div>\n    )\n}\n\nexport default Feed\n","import {parse} from \"query-string\";\n\nexport const range = (start, end) => {\n    return [...Array(end)\n        .keys()]\n        .map(el => el + start)\n};\n\nexport const limit = 10;\n\nexport const getPaginator = search => {\n    const parsedSearch = parse(search)\n    const currentPage = parsedSearch.page ? Number(parsedSearch.page) : 1;\n    const offset = currentPage * 10 - limit\n    return {currentPage, offset}\n}\n","import React from 'react'\nimport classNames from 'classnames'\n\nimport {range} from './utils'\nimport {Link} from \"react-router-dom\";\n\nconst PaginationItem = ({page, currentPage, url}) => {\n    const liClasses = classNames({\n        'page-item': true,\n        active: currentPage === page\n    })\n    return (\n        <li className={liClasses}>\n            <Link to={`${url}?page=${page}`} className='page-link' >{page}</Link>\n        </li>\n    )\n}\nconst Pagination = ({total, limit, url, currentPage}) => {\n    const pagesCount = Math.ceil(total/limit)\n    const pages = range(1, pagesCount)\n    return (\n        <ul className='pagination'>\n            {pages.map(page => (\n                <PaginationItem\n                    page={page}\n                    currentPage={currentPage}\n                    url={url}\n                    key={page}\n                />\n            ))}\n        </ul>\n    )\n}\n\nexport default Pagination\n\n","import React from 'react'\n\nconst Loading = () => {\n    return <div>Loading...</div>\n}\n\nexport default Loading\n","import React from 'react'\n\nconst ErrorMessage = () => {\n    return <div>ErrorMessage...</div>\n}\n\nexport default ErrorMessage\n","import React, {useEffect} from 'react'\nimport {Link} from \"react-router-dom\";\n\nimport useFetch from \"../Hooks/useFetch\";\nimport Loading from \"../pages/components/loading\";\nimport ErrorMessage from \"../pages/components/errorMessage\";\n\nconst PopularTags = () => {\n\n    const [{response, isLoading, error}, doFetch] = useFetch('/tags')\n\n    useEffect(() => {\n        doFetch()\n    }, [doFetch])\n\n    if(isLoading || !response) return <Loading/>\n    if(error) return <ErrorMessage/>\n\n    return (\n        <div className='sidebar'>\n            <p>Popular Tags</p>\n            <div className='tag-list'>\n                {response.tags.map(tag => (\n                    <Link to={`/tags/${tag}`} className='tag-default tag-pill' key={tag} >{tag}</Link>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default PopularTags\n","import React, { createContext, useReducer } from 'react'\n\nconst initialState = {\n    isLoading:  false,\n    isLoggedIn: null,\n    currentUser: null\n}\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'LOADING': return {...state, isLoading: true}\n        case 'SET_AUTHORIZED': return {...state, isLoading: false, isLoggedIn: true, currentUser: action.payload}\n        case 'SET_UNAUTHORIZED': return {...state, isLoggedIn: false}\n        case 'LOGOUT' : return {...initialState, isLoggedIn: false}\n        default: return state\n    }\n}\n\nconst newState = reducer(initialState, {type: 'LOGOUT'})\n\nexport const CurrentUserContext = createContext()\n\nexport const CurrentUserProvider = ({children}) => {\n    const value = useReducer(reducer, initialState)\n    return (\n        <CurrentUserContext.Provider value={value}>{children}</CurrentUserContext.Provider>\n    )\n}\n","import React, { useContext } from 'react'\nimport {NavLink} from \"react-router-dom\";\n\nimport {CurrentUserContext} from \"../../context/currentUser\";\n\nconst FeedTogler = ({tagName}) => {\n    const [currentUserState] = useContext(CurrentUserContext)\n    return (\n        <div className='feed-toggler'>\n            <ul className='nav nav-pills outline-active'>\n                {currentUserState.isLoggedIn && (\n                    <li className='nav-item'>\n                        <NavLink to='/feed' className='nav-link'>\n                            Your Feed\n                        </NavLink>\n                     </li>\n                )}\n                <li className=\"nav-item\">\n                    <NavLink to=\"/\" className=\"nav-link\" exact>\n                        Global feed\n                    </NavLink>\n                </li>\n                {tagName && (\n                    <li className='nav-item'>\n                        <NavLink to={`/tags/${tagName}`} className='nav-link' exact>\n                            <i className='ion-pound'></i>\n                            {tagName}\n                        </NavLink>\n                    </li>\n                )}\n            </ul>\n        </div>\n    )\n}\n\nexport default FeedTogler\n","import React, { useEffect, Fragment } from 'react'\nimport {stringify} from \"query-string\";\n\nimport useFetch from '../../Hooks/useFetch'\nimport Feed from '../components/feed'\nimport Pagination from \"../../pagination/pagination\";\nimport { getPaginator, limit } from \"../../pagination/utils\";\nimport PopularTags from \"../../popularTags/popularTags\";\nimport Loading from \"../components/loading\";\nimport ErrorMessage from \"../components/errorMessage\";\nimport FeedTogler from \"../components/feedTogler\";\n\nconst GlobalFeed = ({location, match}) => {\n\n    const {offset, currentPage} = getPaginator(location.search)\n    const stringifiedParams = stringify({\n         limit,\n         offset\n    })\n    const url = match.url\n    const apiUrl = `/articles?${stringifiedParams}`\n    const [{response, error, isLoading}, doFetch] = useFetch(apiUrl)\n\n    useEffect(() => {\n        doFetch()\n    }, [doFetch, currentPage])\n\n    return (\n        <div className='home-page'>\n            <div className='banner'>\n                <div className='container'>\n                    <h1>Medium clone</h1>\n                    <p>A place to share</p>\n                </div>\n            </div>\n            <div className='container page'>\n                <div className='row'>\n                <div className=\"col-md-9\">\n                    <FeedTogler/>\n                    {isLoading && <Loading/>}\n                    {error && <ErrorMessage/>}\n                    {!isLoading && response && (\n                        <Fragment>\n                            <Feed articles={response.articles} />\n                            <Pagination total={response.articlesCount} limit={limit} url={url} currentPage={currentPage} />\n                        </Fragment>\n                        )}\n                 </div>\n                    <div className='col-md-3'>\n                        <PopularTags/>\n                    </div>\n                </div>\n            </div>\n        </div>\n        )\n}\n\nexport default GlobalFeed\n","import React, { useEffect, useContext, useState } from 'react'\nimport { Link, Redirect } from \"react-router-dom\";\n\nimport useFetch from \"../../Hooks/useFetch\";\nimport Loading from \"../components/loading\";\nimport ErrorMessage from \"../components/errorMessage\";\nimport TagList from \"../components/tagList\";\nimport {CurrentUserContext} from '../../context/currentUser'\n\nconst Article = (props) => {\n    const slug = props.match.params.slug;\n    const apiUrl =  `/articles/${slug}`;\n\n    const [\n        {\n            response: fetchArticleResponse, \n            error: fetchArticleError, \n            isLoading: fetchArticleIsLoading\n        }, doFetch] = useFetch(apiUrl);\n\n    const [isSuccessfullDelet, setIsSuccessfullDelet] = useState(false)\n    const [{response: deleteArticleResponse}, doDeleteArticle] = useFetch(apiUrl)\n    const [currentUserState] = useContext(CurrentUserContext)\n\n    const isAuthor = () => {\n        if (!fetchArticleResponse || !currentUserState.isLoggedIn) return false\n\n        return fetchArticleResponse.article.author.username === currentUserState.currentUser.username\n    }\n\n    const deleteArticle = () => {\n        doDeleteArticle({\n            method: 'delete'\n        })\n    }\n\n\n    useEffect(() => {\n        doFetch()\n    }, [doFetch])\n\n    useEffect(() => {\n        if(!deleteArticleResponse) return \n\n        setIsSuccessfullDelet(true)\n    }, [deleteArticleResponse])\n\n    if(isSuccessfullDelet) return <Redirect to='/' />\n\n    return (\n        <div className='article-page'>\n            <div className='banner'>\n                {!fetchArticleIsLoading && fetchArticleResponse && (\n                    <div className='container'>\n                        <h1>{fetchArticleResponse.article.title}</h1>\n                        <div className='article-meta'>\n                            <Link to={`/profiels/${fetchArticleResponse.article.author.username}`}>\n                                <img src={fetchArticleResponse.article.author.image} alt='' />\n                            </Link>\n                            <div className='info'>\n                                <Link to={`/profiels/${fetchArticleResponse.article.author.username}`}>\n                                    {fetchArticleResponse.article.author.username}\n                                </Link>\n                                <span className='data'>{fetchArticleResponse.article.createdAt}</span>\n                            </div>\n                            {isAuthor() && (\n                                <span>\n                                    <Link \n                                    lassName='btn btn-outline-secondery btn-small' \n                                    to={`/articles/${fetchArticleResponse.article.slug}/edit`}>\n                                        <i className='ion-edit'></i>\n                                        Edit Article\n                                    </Link>\n                                    <button \n                                    className='btn btn-outline-danger btn-sm' \n                                    onClick={deleteArticle}>\n                                        <i className='ion-thash-a'></i>\n                                        Delete\n                                    </button>\n                                </span>\n                            )}\n                        </div>\n                    </div>\n                )}\n            </div>\n            <div className='container page'>\n                {fetchArticleIsLoading && <Loading/>}\n                {fetchArticleError && <ErrorMessage/>}\n                {!fetchArticleIsLoading && fetchArticleResponse && (\n                    <div className='row article-content'>\n                        <div className='col-xs-12'>\n                            <div>\n                                <p>{fetchArticleResponse.article.body}</p>\n                            </div>\n                            <TagList tags={fetchArticleResponse.article.tagList} />\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n};\n\nexport default Article\n","import React from 'react'\n\nconst BackendErrorMessages = ({backendErrors}) => {\n    const errorMessages = Object.keys(backendErrors).map(name => {\n      const messages = backendErrors[name].join(' ')\n      return `${name} ${messages}`\n    })\n    return (\n      <ul className=\"error-messages\">\n        {errorMessages.map(errorMessage => {\n          return <li key={errorMessage}>{errorMessage}</li>\n        })}\n      </ul>\n    )\n  }\n  \n  export default BackendErrorMessages","import React, {useState, useContext, useEffect} from 'react'\n\n//import Components\nimport { Link, Redirect } from \"react-router-dom\";\nimport useFetch from \"../Hooks/useFetch\";\nimport useLocalStorage from '../Hooks/useLocalStorage'\nimport { CurrentUserContext } from '../context/currentUser'\nimport  BackendErrorMessages from './components/backendErrorMessages'\n\nconst Authentication = props => {\n\n    const isLogin = props.match.path === '/login';\n    const pageTitle = isLogin ? 'Sign In' : 'Sign Up';\n    const descriptionLink = isLogin ? '/register' : '/login';\n    const descriptionText = isLogin ? 'Need an account' : 'Have an account?';\n    const apiUrl = isLogin ? '/users/login' : '/users'\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [username, setUsername] = useState('')\n    const [{isLoading, response, error}, doFetch] = useFetch(apiUrl);\n    const [isSuccessfullSubmit, setIsSuccessfullSubmit] = useState(false)\n    const [, setToken] = useLocalStorage('')\n    const [, dispatch] = useContext(CurrentUserContext)\n\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        const user = isLogin ? {email, password} : {email, password, username}\n\n        doFetch({\n            method: 'post',\n            data: {\n                user\n            }\n        })\n    };\n\n    useEffect(() => {\n        if (!response) return\n\n        setToken(response.user.token)\n        setIsSuccessfullSubmit(true)\n        dispatch({type: 'SET_AUTHORIZED', payload: response.user})\n    }, [response, setToken, dispatch]);\n\n    if (isSuccessfullSubmit) return <Redirect to='/' />\n\n    return (\n        <div className=\"auth-page\">\n            <div className=\"container page\">\n                <div className=\"row\">\n                    <div className=\"col-md-6 offset-md-3 col-xs-12\">\n                        <h1 className=\"text-xs-center\">{pageTitle}</h1>\n                        <p className=\"text-xs-center\">\n                            <Link to={descriptionLink}>{descriptionText}</Link>\n                        </p>\n                        <form onSubmit={handleSubmit}>\n                        {error && <BackendErrorMessages backendErrors={error.errors} />}\n                            <fieldset>\n                                {!isLogin && (\n                                    <fieldset className=\"form-group\">\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control form-control-lg\"\n                                            placeholder=\"Username\"\n                                            value={username}\n                                            onChange={e => setUsername(e.target.value)}\n                                        />\n                                    </fieldset>\n                                )}\n                                <fieldset className=\"form-group\">\n                                    <input\n                                        type=\"email\"\n                                        className=\"form-control form-control-lg\"\n                                        placeholder=\"Email\"\n                                        value={email}\n                                        onChange={e => setEmail(e.target.value)}\n                                    />\n                                </fieldset>\n                                <fieldset className=\"form-group\">\n                                    <input\n                                        type=\"password\"\n                                        className=\"form-control form-control-lg\"\n                                        placeholder=\"Password\"\n                                        value={password}\n                                        onChange={e => setPassword(e.target.value)}\n                                    />\n                                </fieldset>\n                                <button\n                                    disabled={isLoading}\n                                    className=\"btn btn-lg btn-primary pull-xs-right\"\n                                    type=\"submit\"\n                                >\n                                    {pageTitle}\n                                </button>\n                            </fieldset>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default Authentication\n","import React, { useEffect, Fragment } from 'react'\nimport {stringify} from \"query-string\";\n\nimport useFetch from '../../Hooks/useFetch'\nimport Feed from \"../components/feed\";\nimport Pagination from \"../../pagination/pagination\";\nimport { getPaginator, limit } from \"../../pagination/utils\";\nimport PopularTags from \"../../popularTags/popularTags\";\nimport Loading from \"../components/loading\";\nimport ErrorMessage from \"../components/errorMessage\";\nimport FeedTogler from \"../components/feedTogler\";\n\nconst TagFeed = ({location, match}) => {\n\n    const tagName = match.params.slug\n    const {offset, currentPage} = getPaginator(location.search)\n    const stringifiedParams = stringify({\n        limit,\n        offset,\n        tag: tagName\n    })\n    const url = match.url\n    const apiUrl = `/articles?${stringifiedParams}`\n    const [{response, error, isLoading}, doFetch] = useFetch(apiUrl)\n\n    useEffect(() => {\n        doFetch()\n    }, [doFetch, currentPage, tagName])\n\n    return (\n        <div className='home-page'>\n            <div className='banner'>\n                <div className='container'>\n                    <h1>Medium clone</h1>\n                    <p>A place to share</p>\n                </div>\n            </div>\n            <div className='container page'>\n                <div className='row'>\n                <div className=\"col-md-9\">\n                    <FeedTogler tagName={tagName}/>\n                    {isLoading && <Loading/>}\n                    {error && <ErrorMessage/>}\n                    {!isLoading && response && (\n                        <Fragment>\n                            <Feed articles={response.articles} />\n                            <Pagination total={response.articlesCount} limit={limit} url={url} currentPage={currentPage} />\n                        </Fragment>\n                        )}\n                 </div>\n                    <div className='col-md-3'>\n                        <PopularTags/>\n                    </div>\n                </div>\n            </div>\n        </div>\n        )\n}\n\nexport default TagFeed\n","import React, {useState, useEffect} from 'react'\n\nimport BackendErrorMessages from \"./backendErrorMessages\";\n\nconst ArticleForm = ({onSubmit, errors, initialValues}) => {\n\n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n    const [body, setBody] = useState('')\n    const [tagList, setTagList] = useState('')\n\n    const handleSubmit = event => {\n        event.preventDefault()\n\n        const article = {\n            title,\n            description,\n            body,\n            tagList: tagList.split(' ')\n        }\n\n        onSubmit(article)\n    }\n\n    useEffect(() => {\n        setTitle(initialValues.title)\n        setDescription(initialValues.description)\n        setBody(initialValues.body)\n        setTagList(initialValues.tagList.join(' '))\n    }, [initialValues])\n\n    return (\n        <div className=\"editor-page\">\n            <div className=\"container page\">\n                <div className=\"row\">\n                    <div className=\"col-md-10 offset-md-1 col-xs-12\">\n                        {errors && <BackendErrorMessages backendErrors={errors} />}\n                        <form onSubmit={handleSubmit}>\n                            <fieldset>\n                                <fieldset className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control form-control-lg\"\n                                        placeholder=\"Article title\"\n                                        value={title}\n                                        onChange={e => setTitle(e.target.value)}\n                                    />\n                                </fieldset>\n                                <fieldset className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control form-control-lg\"\n                                        placeholder=\"What is this article about?\"\n                                        value={description}\n                                        onChange={e => setDescription(e.target.value)}\n                                    />\n                                </fieldset>\n                                <fieldset className=\"form-group\">\n                              <textarea\n                                  className=\"form-control\"\n                                  rows=\"8\"\n                                  placeholder=\"Write your article (in markdown)\"\n                                  value={body}\n                                  onChange={e => setBody(e.target.value)}\n                              />\n                                </fieldset>\n                                <fieldset className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control form-control-lg\"\n                                        placeholder=\"Enter tags\"\n                                        value={tagList}\n                                        onChange={e => setTagList(e.target.value)}\n                                    />\n                                </fieldset>\n                                <fieldset className=\"form-group\">\n                                    <button\n                                        type=\"submit\"\n                                        className=\"btn btn-lg pull-xs-right btn-primary\"\n                                    >\n                                        Publish Article\n                                    </button>\n                                </fieldset>\n                            </fieldset>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ArticleForm\n\n","import React, {useContext, useEffect, useState} from 'react'\nimport {Redirect} from 'react-router-dom'\n\nimport ArticleForm from \"../components/articleForm\";\nimport useFetch from \"../../Hooks/useFetch\";\nimport {CurrentUserContext} from \"../../context/currentUser\";\n\nconst CreateArticle = () => {\n\n    const apiUrl = '/articles';\n    const [isSuccessfullSubmit, setIsSuccessfullSubmit] = useState(false)\n    const [{response, error}, doFetch] = useFetch(apiUrl)\n    const [currentUserState] = useContext(CurrentUserContext)\n\n    const onSubmit = article => {\n        doFetch({\n            method: 'post',\n            data: {\n                article\n            }\n        })\n    }\n\n    const initialValues = {\n        title: '',\n        description: '',\n        body: '',\n        tagList: []\n    }\n\n    useEffect(() => {\n        if (!response) return\n\n        setIsSuccessfullSubmit(true)\n    }, [response])\n\n    if (currentUserState.isLoggedIn === null) return null\n\n    if (isSuccessfullSubmit || currentUserState.isLoggedIn === false) {\n        return <Redirect to=\"/\" />\n    }\n\n    return (\n        <div>\n            <ArticleForm\n                onSubmit={onSubmit}\n                initialValues={initialValues}\n                errors={(error && error.errors) || {}}\n            />\n        </div>\n    )\n}\n\nexport default CreateArticle\n","import React, { useEffect, useState, useContext } from 'react'\n\nimport ArticleForm from '../components/articleForm'\nimport useFetch from '../../Hooks/useFetch'\nimport { Redirect } from 'react-router-dom'\nimport {CurrentUserContext} from '../../context/currentUser'\n\nconst EditArticle = ({match}) => {\n    const slug = match.params.slug\n    const [currentUserState] = useContext(CurrentUserContext)\n    const apiUrl = `/articles/${slug}`;\n    const [{response: fetchArticleResponse}, doFetchArticle] = useFetch(apiUrl)\n    const [{response: updateArticleResponse, error: updateArticleError}, doUpdateArticle] = useFetch(apiUrl)\n    const [initialValues, setInitialValues] = useState(null)\n    const [isSuccessfullSubmit, setIsSuccessfullSubmit] = useState(false)\n\n    const handleSubmit = article => {\n        doUpdateArticle({\n            method: 'put',\n            data: {\n                article\n            }\n        })\n    }\n\n    useEffect(() => {\n        doFetchArticle()\n    }, [doFetchArticle])\n\n    useEffect(() => {\n        if (!fetchArticleResponse) return\n\n        setInitialValues({\n            titel: fetchArticleResponse.article.title,\n            description: fetchArticleResponse.article.description,\n            body: fetchArticleResponse.article.body,\n            tagList: fetchArticleResponse.article.tagList\n        })\n    }, [fetchArticleResponse])\n\n    useEffect(() => {\n        if (!updateArticleResponse) return\n        setIsSuccessfullSubmit(true)\n    }, [updateArticleResponse])\n\n    if (currentUserState.isLoggedIn === false) return <Redirect to='/' />\n\n    if (isSuccessfullSubmit) return <Redirect to={`/articles/${slug}`} />\n    \n    return (\n        <ArticleForm \n        onSubmit={handleSubmit} \n        errors={(updateArticleError && updateArticleError.errors) || {} }\n        initialValues={initialValues}\n        ></ArticleForm>\n    )\n}\n\nexport default EditArticle","import React, { useContext, useState, useEffect } from 'react'\nimport { Redirect } from 'react-router-dom'\n\n\nimport { CurrentUserContext } from '../../context/currentUser'\nimport useLocalStorage from '../../Hooks/useLocalStorage'\nimport useFetch from '../../Hooks/useFetch'\nimport BackendErrorMessage from '../components/backendErrorMessages'\n\nconst Settings = () => {\n    const [currentUserState, dispatch] = useContext(CurrentUserContext)\n    const apiUrl = `/user`;\n    const [{response, error}, doFetch] = useFetch(apiUrl) \n    const [image, setImage] = useState('')\n    const [username, setUsername] = useState('')\n    const [bio, setBio] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [, setToken] = useLocalStorage('token')\n    const [isSuccessfullLogout, setIsSuccessfullLogout] = useState(false)\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        doFetch({\n            method: 'put',\n            data: {\n                user: {\n                    ...currentUserState.currentUser,\n                    image,\n                    username,\n                    bio,\n                    email,\n                    password\n                }\n            }\n        })\n    }\n\n    const logout = e => {\n        e.preventDefault()\n        setToken('')\n        dispatch({type: 'LOGOUT'})\n        setIsSuccessfullLogout(true)\n    }\n\n    useEffect(() => {\n        if(!currentUserState.currentUser) return\n\n        setImage(currentUserState.currentUser.image)\n        setUsername(currentUserState.currentUser.username)\n        setBio(currentUserState.currentUser.bio)\n        setEmail(currentUserState.currentUser.email)\n    }, [currentUserState.currentUser])\n\n    useEffect(() => {\n        if (!response) return\n\n        dispatch({\n            type: 'SET_AUTHORIZED',\n            payload: response.user\n        })\n    },[response, dispatch])\n\n    if(isSuccessfullLogout) return <Redirect to='/' />\n\n    return (\n        <div className='settings-page'>\n            <div className='container page'>\n                <div className='row'>\n                    <div className='col-md-6 offset-md-3 col-xs-12'>\n                        <h1 className='text-xs-center'>Your Settings</h1>\n                        {error && <BackendErrorMessage backendErrors={error.errors} />}\n                        <form onSubmit={handleSubmit}>\n                            <fieldset>\n                                <fieldset className='form-group'>\n                                    <input \n                                    type='text' \n                                    className='form-control form-control-lg' \n                                    placeholder='URL of profile picture'\n                                    value={image}\n                                    onChange={e => setImage(e.target.value)}\n                                    />\n                                </fieldset>\n                                <fieldset className='form-group'>\n                                    <input \n                                    type='text' \n                                    className='form-control form-control-lg' \n                                    placeholder='Username' \n                                    value={username}\n                                    onChange={e => setUsername(e.target.value)}\n                                    />\n                                </fieldset>\n                                <fieldset className='form-group'>\n                                   <textarea \n                                   className='form-control form-control-lg' \n                                   rows='8'\n                                   placeholder='Short boi'\n                                   value={bio}\n                                    onChange={e => setBio(e.target.value)}\n                                   />\n                                </fieldset>\n                                <fieldset className='form-group'>\n                                    <input \n                                    type='text' \n                                    className='form-control form-control-lg' \n                                    placeholder='Email'\n                                    value={email}\n                                    onChange={e => setEmail(e.target.value)}\n                                    />\n                                </fieldset>\n                                <fieldset className='form-group'>\n                                <input \n                                type='password' \n                                className='form-control form-control-lg' \n                                placeholder='Password' \n                                value={password}\n                                onChange={e => setPassword(e.target.value)}\n                                />\n                              </fieldset>\n                              <button \n                              type='submit' \n                              className='btn btn-lg btn-primary pull-xs-right'>\n                                Update Settings\n                              </button>\n                            </fieldset>\n                        </form>\n                        <hr />\n                        <button \n                        className='btn btn-outline-danger' \n                        onClick={logout}>\n                            Click to logout\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Settings","import React, { useEffect, Fragment } from 'react'\nimport { stringify } from 'query-string'\n\nimport { getPaginator, limit } from '../../pagination/utils'\nimport useFetch from '../../Hooks/useFetch'\nimport Loading from './loading'\nimport ErrorMessage from './errorMessage'\nimport Feed from './feed'\nimport Pagination from '../../pagination/pagination'\n\nconst getApiUrl = ({username, offset, isFavorites}) => {\n    const params = isFavorites\n    ? {\n        limit,\n        offset,\n        favorited: username\n      }\n    : {\n        limit,\n        offset,\n        author: username\n      }\n\n    return `/articles/${stringify(params)}`\n}\n\nconst UserArticles = ({username, location, isFavorites, url}) => {\n    const {offset, currentPage} = getPaginator(location.search)\n    const apiUrl = getApiUrl({username, offset, isFavorites})\n    const [{response, isLoading, error}, doFetch] = useFetch(apiUrl)\n\n    useEffect(() => {\n        doFetch()\n    }, [doFetch, isFavorites])\n\n    return (\n        <div className=''>\n            {isLoading && <Loading />}\n            {error && <ErrorMessage />}\n            {!isLoading && response (\n                <Fragment>\n                    <Feed articles={response.articles} />\n                    <Pagination \n                        total={response.articlesCount}\n                        limit={limit} \n                        url={url} \n                        currentPage={currentPage} />\n                </Fragment>\n            )}\n        </div>\n    )\n}\n\nexport default UserArticles","import React, { useEffect } from 'react'\nimport { NavLink } from 'react-router-dom'\n\nimport useFetch from '../../Hooks/useFetch'\nimport UserArticles from './userArticles'\n\nconst UserProfile = ({match, location}) => {\n    const slug = match.params.slug\n    const apiUrl = `/profiels/${slug}`\n    const [{response}, doFetch] = useFetch(apiUrl)\n\n    useEffect(() => {\n        doFetch()\n    },[doFetch])\n\n    if(!response) return null\n\n    return (\n        <div className='profile-page'>\n            <div className='user-info'>\n                <div className='container'>\n                    <div className='row'>\n                        <div className='col-xs-12 col-md-10 offset-md-1'>\n                            <img className='user-img' alt='' src={response.profile.image}/>\n                            <h4>{response.profile.username}</h4>\n                            <p>{response.profile.bio}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className='container'>\n                <div className='row'>\n                    <div className='col-xs-12 col-md-10 offset-md-1'>\n                        <div className='articles-toggle'>\n                            <ul className='nav nav-pills outline-active'>\n                                <li className='nav-item'>\n                                    <NavLink \n                                    to={`/profiles/${response.profile.username}`} className='nav-link' exact>\n                                        My Post\n                                    </NavLink>\n                                </li>\n                                <li className='nav-item'>\n                                    <NavLink \n                                    to={`/profiles/${response.profile.username}/favorites`}\n                                    className='nav-link'\n                                    >\n                                        Favortires Post\n                                    </NavLink>\n                                </li>\n                            </ul>\n                        </div>\n                        <UserArticles\n                        username={response.profile.username}\n                        location={location}\n                        url={match.url}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default UserProfile","import React from 'react'\n\nimport { Switch, Route } from 'react-router-dom'\n\nimport GlobalFeed from './pages/globalFeed/globalFeed'\nimport Article from './pages/article/article'\nimport Authentication from './pages/authentication';\nimport TagFeed from './pages/tagFeed/tagFeed';\nimport YourFeed from './pages/tagFeed/tagFeed';\nimport CreateArticle from \"./pages/createArticle\";\nimport EditArticle from './pages/editArticle/editArticle'\nimport Settings from './pages/settings/index'\nimport UserProfile from './pages/components/userProfile';\n\nexport default () => {\n    return (\n        <Switch>\n            <Route exact path='/' component={GlobalFeed} />\n            <Route path=\"/profiles/:slug\" component={UserProfile} />\n            <Route path=\"/profiles/:slug/favorites\" component={UserProfile} />\n            <Route path='/settings' component={Settings} />\n            <Route path='/articles/new' component={CreateArticle} />\n            <Route path='/articles/:slug/edit' component={EditArticle} />\n            <Route path='/feed' component={YourFeed} />\n            <Route exact path='/tags/:slug' component={TagFeed} />\n            <Route path='/login' component={Authentication} />\n            <Route path='/register' component={Authentication} />\n            <Route path='/articles/:slug' component={Article} />\n        </Switch>\n    )\n}\n","import React, { useContext, Fragment } from 'react'\nimport { Link, NavLink } from 'react-router-dom'\n\nimport { CurrentUserContext } from '../context/currentUser'\n\n\nconst TopBar = () => {\n    const [currentUserState] = useContext(CurrentUserContext)\n\n    const userImage = (currentUserState.isLoggedIn && currentUserState.currentUser.image) || 'https://static.productionready.io/images/smiley-cyrus.jpg'\n\n    return (\n      <nav className=\"navbar navbar-light\">\n        <div className=\"container\">\n          <Link to=\"/\" className=\"navbar-brand\">\n            Medium\n          </Link>\n          <ul className=\"nav navbar-nav pull-xs-right\">\n            <li className=\"nav-item\">\n              <NavLink to=\"/\" className=\"nav-link\" exact>\n                Home\n              </NavLink>\n            </li>\n            {currentUserState.isLoggedIn && (\n              <Fragment>\n                <li className=\"nav-item\">\n                  <NavLink to=\"/articles/new\" className=\"nav-link\">\n                    <i className=\"ion-compose\" />\n                    &nbsp; New Post\n                  </NavLink>\n                </li>\n                <li className=\"nav-item\">\n                  <NavLink to=\"/settings\" className=\"nav-link\">\n                    <i className=\"ion-gear-a\" />\n                    &nbsp; Settings\n                  </NavLink>\n                </li>\n                <li className=\"nav-item\">\n                  <NavLink\n                    to={`/profiles/${currentUserState.currentUser.username}`}\n                    className=\"nav-link\"\n                  >\n                    <img className=\"user-pic\" src={userImage} alt=\"\" />\n                    &nbsp; {currentUserState.currentUser.username}\n                  </NavLink>\n                </li>\n              </Fragment>\n            )}\n            {currentUserState.isLoggedIn === false && (\n              <Fragment>\n                <li className=\"nav-item\">\n                  <NavLink to=\"/login\" className=\"nav-link\">\n                    Sign in\n                  </NavLink>\n                </li>\n                <li className=\"nav-item\">\n                  <NavLink to=\"/register\" className=\"nav-link\">\n                    Sign up\n                  </NavLink>\n                </li>\n              </Fragment>\n            )}\n          </ul>\n        </div>\n      </nav>\n    )\n  }\n\nexport default TopBar\n","import { useEffect, useContext } from 'react'\n\nimport useFetch from '../Hooks/useFetch'\nimport { CurrentUserContext } from './currentUser'\nimport useLocalStorage from '../Hooks/useLocalStorage'\n\nconst CurrentUserChecker = ({children}) => {\n    const [, dispatch] = useContext(CurrentUserContext)\n    const [{response}, doFetch] = useFetch('/user')\n    const [token] = useLocalStorage('token')\n\n    useEffect(() => {\n      if (!token) {\n        dispatch({type: 'SET_UNAUTHORIZED'})\n        return\n      }\n\n      doFetch();\n        dispatch({type: 'LOADING'})\n    }, [doFetch, dispatch, token])\n\n    useEffect(() => {\n      if (!response) {\n        return\n      }\n\n      dispatch({type: 'SET_AUTHORIZED', payload: response.user})\n    }, [response, dispatch])\n    return children\n  }\n\nexport default CurrentUserChecker\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Routes from './components/Routes';\nimport TopBar from './components/topBar/topbar';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { CurrentUserProvider } from './components/context/currentUser'\nimport CurrentUserCheker from './components/context/currentUserCheker';\n\n\nconst App = () => {\n  return (\n    <CurrentUserProvider>\n      <CurrentUserCheker>\n        <Router>\n            <TopBar/>\n            <Routes/>\n          </Router>\n      </CurrentUserCheker>\n    </CurrentUserProvider>\n  )\n}\n\nReactDOM.render(<><App /></>,document.getElementById('root'));\n\n"],"sourceRoot":""}